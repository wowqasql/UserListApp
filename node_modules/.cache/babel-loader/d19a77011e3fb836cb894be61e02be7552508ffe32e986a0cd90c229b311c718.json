{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u041E\\u043B\\u0435\\u0433\\\\itproglesson\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport AddUser from \"./components/AddUser\";\nimport Header from \"./components/Header\";\nimport UsersList from \"./components/UsersList\";\nimport axios from 'axios';\nimport SortUsers from \"./components/SortUsers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"https://jsonplaceholder.typicode.com/users\";\nconst App = () => {\n  _s();\n  const [users, setUsers] = useState([{\n    id: '',\n    email: '',\n    name: '',\n    username: '',\n    age: '',\n    isAgree: ''\n  }]);\n  useEffect(() => {\n    fetch(url).then(response => response.json().then(json => setUsers(json)));\n  }, []);\n  const onAddNewUser = newUser => {\n    setUsers([...users, newUser]);\n  };\n  const removeUser = user => {\n    setUsers(users.filter(u => u.id !== user.id));\n  };\n  const [selectSort, setSelectSort] = useState('');\n  const [search, setSearch] = useState('');\n\n  // const sortUsers = (sort) => {\n  //   setSelectSort(sort)\n  //   // setUsers([...users].sort((a,b) => a[sort].localeCompare(b[sort])))\n  // }\n\n  const sortedUsers = useMemo(() => {\n    console.log(\"Отработала getSortedUsers\");\n    if (selectSort) {\n      return [...users].sort((a, b) => a[selectSort].localeCompare(b[selectSort]));\n    }\n    return users;\n  }, [selectSort, users]);\n  const searchAndSortUsers = useMemo(() => {\n    return sortedUsers.filter(s => s.name.toLowerCase().includes(search));\n  }, [search, sortedUsers]);\n  const EditUser = user => {\n    console.log(user);\n    users[user.id - 1] = user;\n    setUsers([...users]);\n  };\n\n  // поиск\n  // type email in input\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: search,\n      type: \"text\",\n      placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A...\",\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SortUsers, {\n      selectSort: selectSort,\n      sortUsers: sortUsers,\n      defaultValue: \"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430 \\u043F\\u043E\",\n      options: [{\n        value: 'name',\n        name: 'По имени'\n      }, {\n        value: 'username',\n        name: 'По фамилии'\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(UsersList, {\n        users: searchAndSortUsers,\n        removeUser: removeUser,\n        EditUser: EditUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      children: /*#__PURE__*/_jsxDEV(AddUser, {\n        users: users,\n        onAddNewUser: onAddNewUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"2ITqD/zrwu/gG8FnK/JEzRpI3Z8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","AddUser","Header","UsersList","axios","SortUsers","url","App","users","setUsers","id","email","name","username","age","isAgree","fetch","then","response","json","onAddNewUser","newUser","removeUser","user","filter","u","selectSort","setSelectSort","search","setSearch","sortedUsers","console","log","sort","a","b","localeCompare","searchAndSortUsers","s","toLowerCase","includes","EditUser","e","target","value","sortUsers"],"sources":["C:/Users/Олег/itproglesson/src/App.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\"\r\nimport AddUser from \"./components/AddUser\"\r\nimport Header from \"./components/Header\"\r\nimport UsersList from \"./components/UsersList\"\r\nimport axios from 'axios'\r\nimport SortUsers from \"./components/SortUsers\"\r\n\r\nconst url = \"https://jsonplaceholder.typicode.com/users\"\r\n\r\nconst App = () => {\r\n\r\nconst [users, setUsers] = useState([{id: '', email:'', name: '', username: '', age: '', isAgree: ''}])\r\n\r\nuseEffect(() =>{ fetch(url).then(response => response.json().then(json => setUsers(json)))},[])\r\n\r\n \r\n  const onAddNewUser = (newUser) => {\r\n    setUsers([...users, newUser])\r\n }\r\n\r\n  const removeUser = (user) => {\r\n    setUsers(users.filter(u => u.id !== user.id))\r\n  }\r\n\r\n  const [selectSort, setSelectSort] = useState('')\r\n\r\n  const [search, setSearch] = useState('')\r\n\r\n  // const sortUsers = (sort) => {\r\n  //   setSelectSort(sort)\r\n  //   // setUsers([...users].sort((a,b) => a[sort].localeCompare(b[sort])))\r\n  // }\r\n\r\n  const sortedUsers =  useMemo(() => {\r\n    console.log(\"Отработала getSortedUsers\")\r\n\r\n    if(selectSort){\r\n      return [...users].sort((a,b) => a[selectSort].localeCompare(b[selectSort]))\r\n    }\r\n    return users\r\n\r\n  }, [selectSort, users])\r\n\r\n  const searchAndSortUsers = useMemo(() => {\r\n    return sortedUsers.filter(s => s.name.toLowerCase().includes(search))\r\n  }, [search, sortedUsers])\r\n\r\n\r\n  const EditUser = (user) => {\r\n    console.log(user)\r\n    users[user.id - 1] = user\r\n    setUsers([...users])\r\n  }\r\n\r\n\r\n\r\n// поиск\r\n// type email in input\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <input value={search} type='text' placeholder='Поиск...' onChange={e => setSearch(e.target.value)} />\r\n      <SortUsers\r\n        selectSort={selectSort}\r\n        sortUsers={sortUsers}\r\n        defaultValue='Сортировка по'\r\n        options={[{ value: 'name', name: 'По имени' }, { value: 'username', name: 'По фамилии' }]}\r\n      />\r\n      <main>\r\n        <UsersList users={searchAndSortUsers} removeUser={removeUser} EditUser={EditUser} />\r\n      </main>\r\n      <aside>\r\n        <AddUser users={users} onAddNewUser={onAddNewUser} />\r\n      </aside>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default App\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}